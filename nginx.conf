# user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;
# load_module modules/ngx_http_image_filter_module.so;

events {
    worker_connections 1024;
}

http {
    upstream servers {
        server 127.0.0.1:8803;
        server 127.0.0.1:8804;
    }

    server {
        # listen 85;
        server_name nginx2.ddns.net;

        location / {
            root /usr/local/nginx/html;
            index index.html index.nginx-debian.html;
        }

        location /redblue {
            proxy_pass http://servers;
        }

        location /secondpage {
            alias /usr/local/nginx/html/secondpage.html;
            default_type text/html;
            add_header Content-Type text/html;
        }

        location /music {
            alias /usr/local/nginx/html/Toxis.mp3;
            default_type application/octet-stream;
            add_header Content-Disposition "attachment; filename=song.mp3";
        }

        location /image1 {
            proxy_pass http://127.0.0.1/images/image1.jpg;
        }
    
        location /image2 {
            proxy_pass http://127.0.0.1/images/image2.png; 
            add_header Content-Type image/png;   
        }
    
        location /secondserver {
            proxy_pass http://bsu.by;
        }

        location /cpuinfo {
            alias /usr/local/nginx/html/cpuinfo.html;
            default_type text/html;
            add_header Content-Type text/html;      
        }

        location ~ /images/(.+\.jpg)$ {
            alias /usr/local/nginx/html/images/$1;
            image_filter rotate 180;
        }

        listen [::]:443 ssl ipv6only=on; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/nginx2.ddns.net/fullchain.pem; # mana>
        ssl_certificate_key /etc/letsencrypt/live/nginx2.ddns.net/privkey.pem; # ma>
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        # location /info.php {
        #     proxy_pass http://127.0.0.1:8080;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
        location /phpinfo.php {
            proxy_pass https://apache3.ddns.net:8080/phpinfo.php;
        }

        if ($host = apache3.ddns.net) {
            return 301 https://apache3.ddns.net:8080;
        } # managed by Certbot
    }

    server {
        listen 8803;
        listen [::]:8803;
        server_name nginx2.ddns.net;
        root /usr/local/nginx/html/colorpages/red;

        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen 8804;
        listen [::]:8804;
        server_name nginx2.ddns.net;
        root /usr/local/nginx/html/colorpages/blue;

        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
         if ($host = nginx2.ddns.net) {
             return 301 https://$host$request_uri;
         } # managed by Certbot


         listen 80 ;
         listen [::]:80;

         server_name nginx2.ddns.net;
         return 404; # managed by Certbot
    }

    # server {
    #     listen 443 ssl;
    #     server_name apache3.ddns.net;

    #     ssl_certificate /etc/letsencrypt/live/apache3.ddns.net/fullchain.pem; # managed by Certbot
    #     ssl_certificate_key /etc/letsencrypt/live/apache3.ddns.net/privkey.pem;
    #     include /etc/letsencrypt/options-ssl-apache.conf; # managed by Certbot

    #     location / {
    #         proxy_pass https://apache3.ddns.net:8080;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}
